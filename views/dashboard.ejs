<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Panneau de Contrôle - Telegram Bot</title>
  <link rel="stylesheet" href="/style.css">
</head>
<body>
  <div class="container">
    <%- include('partials/header') %>
    <%- include('partials/nav') %>

    <% if (pinnedMessage) { %>
      <div class="pinned-display">
        <strong>📌 Message Épinglé:</strong>
        <p><%= pinnedMessage.message %></p>
      </div>
    <% } %>

    <div class="stats-grid">
      <div class="stat-card">
        <div class="stat-icon">💬</div>
        <div class="stat-info">
          <h3><%= stats.totalMessages %></h3>
          <p>Messages Totaux</p>
        </div>
      </div>

      <div class="stat-card">
        <div class="stat-icon">👥</div>
        <div class="stat-info">
          <h3><%= stats.totalUsers %></h3>
          <p>Utilisateurs</p>
        </div>
      </div>

      <div class="stat-card">
        <div class="stat-icon">📤</div>
        <div class="stat-info">
          <h3><%= stats.userMessages %></h3>
          <p>Messages Utilisateurs</p>
        </div>
      </div>

      <div class="stat-card">
        <div class="stat-icon">🤖</div>
        <div class="stat-info">
          <h3><%= stats.aiMessages %></h3>
          <p>Réponses IA</p>
        </div>
      </div>
    </div>

    <div class="section">
      <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
        <h2>👥 Liste des Utilisateurs</h2>
        <button onclick="deleteAllData()" class="btn-delete" style="margin: 0;">🗑️ Supprimer Toutes les Données</button>
      </div>
      <div id="users-list" class="users-container">
        <p class="loading">Chargement des utilisateurs...</p>
      </div>
    </div>

    <div class="section">
      <h2>💬 Conversation Sélectionnée</h2>
      <div id="conversation-viewer" class="conversation-container">
        <p class="placeholder">Sélectionnez un utilisateur pour voir la conversation</p>
      </div>
    </div>

    <div class="section">
      <h2>📊 Messages Récents</h2>
      <div class="recent-messages">
        <% if (stats.recentMessages && stats.recentMessages.length > 0) { %>
          <% stats.recentMessages.forEach(msg => { %>
            <div class="message-item <%= msg.from %>">
              <div class="message-header">
                <span class="user-id">User: <%= msg.user_id %></span>
                <span class="timestamp"><%= new Date(msg.timestamp).toLocaleString('fr-FR') %></span>
              </div>
              <div class="message-content">
                <%= msg.message.substring(0, 150) %><%= msg.message.length > 150 ? '...' : '' %>
              </div>
              <div class="message-type"><%= msg.from === 'user' ? '👤 Utilisateur' : '🤖 IA' %></div>
            </div>
          <% }); %>
        <% } else { %>
          <p class="no-data">Aucun message récent</p>
        <% } %>
      </div>
    </div>
  </div>

  <script>
    async function loadUsers() {
      try {
        const response = await fetch('/api/users');
        const users = await response.json();
        
        const container = document.getElementById('users-list');
        
        if (users.length === 0) {
          container.innerHTML = '<p class="no-data">Aucun utilisateur trouvé</p>';
          return;
        }
        
        container.innerHTML = users.map(user => `
          <div class="user-card" onclick="loadConversation('${user.userId}')">
            <div class="user-icon">👤</div>
            <div class="user-info">
              <strong>User ID: ${user.userId}</strong>
              <p>${user.messageCount} messages</p>
              <p class="last-active">Dernier: ${new Date(user.lastMessage).toLocaleString('fr-FR')}</p>
            </div>
          </div>
        `).join('');
      } catch (error) {
        console.error('Error loading users:', error);
        document.getElementById('users-list').innerHTML = '<p class="error">Erreur de chargement</p>';
      }
    }

    async function loadConversation(userId) {
      try {
        const response = await fetch(`/api/conversation/${userId}`);
        const messages = await response.json();
        
        const container = document.getElementById('conversation-viewer');
        
        if (messages.length === 0) {
          container.innerHTML = '<p class="no-data">Aucun message trouvé</p>';
          return;
        }
        
        container.innerHTML = `
          <div class="conversation-header">
            <div>
              <h3>Conversation avec User ID: ${userId}</h3>
              <p>${messages.length} messages</p>
            </div>
            <button onclick="deleteConversation('${userId}')" class="btn-delete">🗑️ Supprimer l'historique</button>
          </div>
          <div class="messages-list">
            ${messages.map(msg => `
              <div class="chat-message ${msg.from}">
                <div class="message-meta">
                  <span class="sender">${msg.from === 'user' ? '👤 Utilisateur' : '🤖 IA'}</span>
                  <span class="time">${new Date(msg.timestamp).toLocaleString('fr-FR')}</span>
                </div>
                <div class="message-text">${escapeHtml(msg.message)}</div>
              </div>
            `).join('')}
          </div>
        `;
      } catch (error) {
        console.error('Error loading conversation:', error);
        document.getElementById('conversation-viewer').innerHTML = '<p class="error">Erreur de chargement</p>';
      }
    }

    async function deleteConversation(userId) {
      if (!confirm(`Voulez-vous vraiment supprimer l'historique de conversation de l'utilisateur ${userId}?`)) return;
      
      try {
        const response = await fetch(`/api/conversation/${userId}`, {
          method: 'DELETE'
        });
        
        const result = await response.json();
        
        if (result.success) {
          alert(`✅ ${result.deletedCount} messages supprimés`);
          document.getElementById('conversation-viewer').innerHTML = '<p class="placeholder">Historique supprimé</p>';
          loadUsers();
        } else {
          alert('❌ Erreur lors de la suppression');
        }
      } catch (error) {
        alert('❌ Erreur lors de la suppression');
      }
    }

    async function deleteAllData() {
      const confirmText = prompt('⚠️ ATTENTION! Cette action supprimera TOUTES les données (messages, paiements, configurations médias).\n\nPour confirmer, tapez "SUPPRIMER TOUT" :');
      
      if (confirmText !== 'SUPPRIMER TOUT') {
        alert('❌ Annulé - vous devez taper exactement "SUPPRIMER TOUT" pour confirmer');
        return;
      }
      
      try {
        const response = await fetch('/api/delete-all-data', {
          method: 'DELETE'
        });
        
        const result = await response.json();
        
        if (result.success) {
          alert(`✅ Toutes les données ont été supprimées!\n\nMessages: ${result.result.messagesDeleted}\nConfigurations médias: ${result.result.mediaConfigDeleted}\nPaiements: ${result.result.paymentsDeleted}\nTotal: ${result.result.total}`);
          location.reload();
        } else {
          alert('❌ Erreur lors de la suppression');
        }
      } catch (error) {
        alert('❌ Erreur lors de la suppression');
      }
    }

    function escapeHtml(text) {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }

    loadUsers();
    setInterval(loadUsers, 30000);
  </script>
</body>
</html>
